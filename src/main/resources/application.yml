# ─── top-level server section ────────────────────────────────────────────────────
server:
  port: 8080
  address: 0.0.0.0
  forward-headers-strategy: native

# ─── now your Spring properties ───────────────────────────────────────────────────
spring:
  application:
    name: knightfam

  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB

  management:
    endpoints:
      web:
        exposure:
          include: health,info

  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://…/knightfam
    username: famknight
    password: banjo123

  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
      format_sql: true

  security:
    oauth2:
      client:
        registration:
          cognito:
            client-id:     1eddhu1oale604stl9e348bq0i
            client-secret: 1jv782dl6h69u2qaq4phu9jvt3sniottlp7otj9qh9skavi472rc
            provider:      cognito
            scope:
              - openid
              - email
              - profile
            # use the *template* key here so Spring picks up the forwarded headers:
            redirect-uri-template: "{baseUrl}/login/oauth2/code/{registrationId}"
      provider:
        cognito:
          issuer-uri:         https://cognito-idp.us-east-2.amazonaws.com/us-east-2_4L2Pj9fXk
          user-name-attribute: username

logging:
  level:
    org.springframework.security: DEBUG
    org.hibernate.SQL:          DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

cognito:
  domain:            https://us-east-2_4l2pj9fxk.auth.us-east-2.amazoncognito.com
  logout-redirect-url: https://knightfam.com

aws:
  s3:
    bucket: knightfam-s3
    region: us-east-2
